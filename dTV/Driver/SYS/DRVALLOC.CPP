/////////////////////////////////////////////////////////////////////////////
// Drvalloc.cpp
/////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2000 John Adcock.  All rights reserved.
/////////////////////////////////////////////////////////////////////////////
//
//	This file is subject to the terms of the GNU General Public License as
//	published by the Free Software Foundation.  A copy of this license is
//	included with this software distribution in the file COPYING.  If you
//	do not have a copy, you may obtain a copy by writing to the Free
//	Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
//
//	This software is distributed in the hope that it will be useful,
//	but WITHOUT ANY WARRANTY; without even the implied warranty of
//	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//	GNU General Public License for more details
/////////////////////////////////////////////////////////////////////////////
//
// This software was based on hwiodrv from the FreeTV project Those portions are
// Copyright (C) Mathias Ellinger
//
/////////////////////////////////////////////////////////////////////////////
// Change Log
//
// Date          Developer             Changes
//
// 19 Nov 1998   Mathias Ellinger      initial version
//
// 24 Jul 2000   John Adcock           Original dTV Release
//                                     Added Memory Alloc functions
//
/////////////////////////////////////////////////////////////////////////////

#if ! defined (_NTDDK_)
extern "C" {
#include <ntddk.h>
}
#endif

//---------------------------------------------------------------------------
//
//---------------------------------------------------------------------------
void * _cdecl operator new(size_t size )
 {
  PVOID buffer;


  buffer = ExAllocatePoolWithTag(
                                 NonPagedPool,
                                 (ULONG) size
                                 ,0x696C6C65
                                );


  return(buffer);
 }


void _cdecl operator delete( PVOID ptr )
 {
  ExFreePool(ptr);
 }


int _cdecl _purecall()
 {
  DbgPrint(" pure virtual function called\n");
  return(0);
 }





